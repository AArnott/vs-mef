steps:

- task: UseDotNet@2
  displayName: Install .NET Core SDK 3.1.100
  inputs:
    packageType: sdk
    version: 3.1.100

- task: UseDotNet@2
  displayName: Install .NET Core runtime 2.1.x
  inputs:
    packageType: runtime
    version: 2.1.x

- task: UseDotNet@2
  displayName: Install .NET Core runtime 2.2.x
  inputs:
    packageType: runtime
    version: 2.2.x

- script: dotnet --info
  displayName: Show dotnet SDK info

- script: dotnet restore
  displayName: Restore packages
  workingDirectory: ${{ parameters.projectdirectory }}

- script: dotnet build -v n -f netcoreapp2.1 -c $(BuildConfiguration) --no-restore /bl:"$(Build.ArtifactStagingDirectory)/build_logs/netcoreapp2.1.binlog"
  displayName: Build test for netcoreapp2.1
  workingDirectory: ${{ parameters.projectdirectory }}

- script: dotnet test -v n -f netcoreapp2.1 -c $(BuildConfiguration) --no-build --logger "trx;LogFileName=$(Build.ArtifactStagingDirectory)/testlogs/netcoreapp2.1.trx"
  displayName: Run tests for netcoreapp2.1 on the .NET Core 2.1 runtime
  workingDirectory: ${{ parameters.projectdirectory }}
  env:
    DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 0
    RuntimeFrameworkVersion: 2.1.0
  condition: succeededOrFailed()

- script: dotnet test -v n -f netcoreapp2.1 -c $(BuildConfiguration) --no-build --logger "trx;LogFileName=$(Build.ArtifactStagingDirectory)/testlogs/netcoreapp2.2.trx"
  displayName: Run tests for netcoreapp2.1 on the .NET Core 2.2 runtime
  workingDirectory: ${{ parameters.projectdirectory }}
  env:
    DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 0
    RuntimeFrameworkVersion: 2.2.0
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)/testlogs
    ArtifactName: ${{ parameters.testlogartifactname }}
    ArtifactType: Container
  displayName: Publish testlogs artifacts
  condition: succeededOrFailed()
